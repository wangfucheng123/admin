<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dfans.datadao.BrokerAgentMapper" >
  <resultMap id="BaseResultMap" type="com.dfans.model.BrokerAgent" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="certificate_num" property="certificateNum" jdbcType="VARCHAR" />
    <result column="agency" property="agency" jdbcType="VARCHAR" />
    <result column="certificate_category" property="certificateCategory" jdbcType="VARCHAR" />
    <result column="practice_category" property="practiceCategory" jdbcType="VARCHAR" />
    <result column="effective_date" property="effectiveDate" jdbcType="DATE" />
    <result column="change_record" property="changeRecord" jdbcType="VARCHAR" />
    <result column="credit_record" property="creditRecord" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="totalString" type="java.lang.String" >
  	<result column="total" property="total" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, gender, certificate_num, agency, certificate_category, practice_category, 
    effective_date, change_record, credit_record
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from broker_agent
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" parameterType="hashmap">
    select 
    <include refid="Base_Column_List" />
    from broker_agent where 1=1 
    order by id desc limit #{page},10 
  </select>
  
  <select id="selectCount" resultMap="totalString" parameterType="hashmap">
    select count(id) total from broker_agent 
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from broker_agent
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dfans.model.BrokerAgent" >
    insert into broker_agent (id, name, gender, 
      certificate_num, agency, certificate_category, 
      practice_category, effective_date, change_record, 
      credit_record)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{certificateNum,jdbcType=VARCHAR}, #{agency,jdbcType=VARCHAR}, #{certificateCategory,jdbcType=VARCHAR}, 
      #{practiceCategory,jdbcType=VARCHAR}, #{effectiveDate,jdbcType=DATE}, #{changeRecord,jdbcType=VARCHAR}, 
      #{creditRecord,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dfans.model.BrokerAgent" >
    insert into broker_agent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="certificateNum != null" >
        certificate_num,
      </if>
      <if test="agency != null" >
        agency,
      </if>
      <if test="certificateCategory != null" >
        certificate_category,
      </if>
      <if test="practiceCategory != null" >
        practice_category,
      </if>
      <if test="effectiveDate != null" >
        effective_date,
      </if>
      <if test="changeRecord != null" >
        change_record,
      </if>
      <if test="creditRecord != null" >
        credit_record,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="certificateNum != null" >
        #{certificateNum,jdbcType=VARCHAR},
      </if>
      <if test="agency != null" >
        #{agency,jdbcType=VARCHAR},
      </if>
      <if test="certificateCategory != null" >
        #{certificateCategory,jdbcType=VARCHAR},
      </if>
      <if test="practiceCategory != null" >
        #{practiceCategory,jdbcType=VARCHAR},
      </if>
      <if test="effectiveDate != null" >
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="changeRecord != null" >
        #{changeRecord,jdbcType=VARCHAR},
      </if>
      <if test="creditRecord != null" >
        #{creditRecord,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dfans.model.BrokerAgent" >
    update broker_agent
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="certificateNum != null" >
        certificate_num = #{certificateNum,jdbcType=VARCHAR},
      </if>
      <if test="agency != null" >
        agency = #{agency,jdbcType=VARCHAR},
      </if>
      <if test="certificateCategory != null" >
        certificate_category = #{certificateCategory,jdbcType=VARCHAR},
      </if>
      <if test="practiceCategory != null" >
        practice_category = #{practiceCategory,jdbcType=VARCHAR},
      </if>
      <if test="effectiveDate != null" >
        effective_date = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="changeRecord != null" >
        change_record = #{changeRecord,jdbcType=VARCHAR},
      </if>
      <if test="creditRecord != null" >
        credit_record = #{creditRecord,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dfans.model.BrokerAgent" >
    update broker_agent
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      certificate_num = #{certificateNum,jdbcType=VARCHAR},
      agency = #{agency,jdbcType=VARCHAR},
      certificate_category = #{certificateCategory,jdbcType=VARCHAR},
      practice_category = #{practiceCategory,jdbcType=VARCHAR},
      effective_date = #{effectiveDate,jdbcType=DATE},
      change_record = #{changeRecord,jdbcType=VARCHAR},
      credit_record = #{creditRecord,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>