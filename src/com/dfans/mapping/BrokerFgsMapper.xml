<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dfans.datadao.BrokerFgsMapper" >
  <resultMap id="BaseResultMap" type="com.dfans.model.BrokerFgs" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="base_id" property="baseId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="bgdz" property="bgdz" jdbcType="VARCHAR" />
    <result column="ywfw" property="ywfw" jdbcType="VARCHAR" />
    <result column="fzr" property="fzr" jdbcType="VARCHAR" />
    <result column="khtsdh" property="khtsdh" jdbcType="VARCHAR" />
  </resultMap>
    <resultMap id="totalString" type="java.lang.String" >
  	<result column="total" property="total" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, base_id, name, bgdz, ywfw, fzr, khtsdh
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from broker_fgs
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="selectAll" resultMap="BaseResultMap" parameterType="hashmap">
    select 
    <include refid="Base_Column_List" />
    from broker_fgs where 1=1 
   and base_id = #{baseId}
    order by id desc limit #{page},10 
  </select>
  
  <select id="selectCount" resultMap="totalString" parameterType="hashmap">
    select count(id) total from broker_fgs 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from broker_fgs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dfans.model.BrokerFgs" >
    insert into broker_fgs (id, base_id, name, 
      bgdz, ywfw, fzr, khtsdh
      )
    values (#{id,jdbcType=INTEGER}, #{baseId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{bgdz,jdbcType=VARCHAR}, #{ywfw,jdbcType=VARCHAR}, #{fzr,jdbcType=VARCHAR}, #{khtsdh,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dfans.model.BrokerFgs" >
    insert into broker_fgs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="baseId != null" >
        base_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="bgdz != null" >
        bgdz,
      </if>
      <if test="ywfw != null" >
        ywfw,
      </if>
      <if test="fzr != null" >
        fzr,
      </if>
      <if test="khtsdh != null" >
        khtsdh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="baseId != null" >
        #{baseId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="bgdz != null" >
        #{bgdz,jdbcType=VARCHAR},
      </if>
      <if test="ywfw != null" >
        #{ywfw,jdbcType=VARCHAR},
      </if>
      <if test="fzr != null" >
        #{fzr,jdbcType=VARCHAR},
      </if>
      <if test="khtsdh != null" >
        #{khtsdh,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dfans.model.BrokerFgs" >
    update broker_fgs
    <set >
      <if test="baseId != null" >
        base_id = #{baseId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="bgdz != null" >
        bgdz = #{bgdz,jdbcType=VARCHAR},
      </if>
      <if test="ywfw != null" >
        ywfw = #{ywfw,jdbcType=VARCHAR},
      </if>
      <if test="fzr != null" >
        fzr = #{fzr,jdbcType=VARCHAR},
      </if>
      <if test="khtsdh != null" >
        khtsdh = #{khtsdh,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dfans.model.BrokerFgs" >
    update broker_fgs
    set base_id = #{baseId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      bgdz = #{bgdz,jdbcType=VARCHAR},
      ywfw = #{ywfw,jdbcType=VARCHAR},
      fzr = #{fzr,jdbcType=VARCHAR},
      khtsdh = #{khtsdh,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>