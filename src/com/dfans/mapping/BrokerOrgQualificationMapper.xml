<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dfans.datadao.BrokerOrgQualificationMapper" >
  <resultMap id="BaseResultMap" type="com.dfans.model.BrokerOrgQualification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="base_id" property="baseId" jdbcType="INTEGER" />
    <result column="org_qualification" property="orgQualification" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="totalString" type="java.lang.String" >
  	<result column="total" property="total" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, base_id, org_qualification
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from broker_org_qualification
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" parameterType="hashmap">
    select 
    <include refid="Base_Column_List" />
    from broker_org_qualification where 1=1 
     and base_id = #{baseId}
    order by id desc limit #{page},10 
  </select>
  
  <select id="selectCount" resultMap="totalString" parameterType="hashmap">
    select count(id) total from broker_org_qualification 
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from broker_org_qualification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dfans.model.BrokerOrgQualification" >
    insert into broker_org_qualification (id, base_id, org_qualification
      )
    values (#{id,jdbcType=INTEGER}, #{baseId,jdbcType=INTEGER}, #{orgQualification,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dfans.model.BrokerOrgQualification" >
    insert into broker_org_qualification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="baseId != null" >
        base_id,
      </if>
      <if test="orgQualification != null" >
        org_qualification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="baseId != null" >
        #{baseId,jdbcType=INTEGER},
      </if>
      <if test="orgQualification != null" >
        #{orgQualification,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dfans.model.BrokerOrgQualification" >
    update broker_org_qualification
    <set >
      <if test="baseId != null" >
        base_id = #{baseId,jdbcType=INTEGER},
      </if>
      <if test="orgQualification != null" >
        org_qualification = #{orgQualification,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dfans.model.BrokerOrgQualification" >
    update broker_org_qualification
    set base_id = #{baseId,jdbcType=INTEGER},
      org_qualification = #{orgQualification,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>