<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dfans.dao.AccountChangeMapper" >
  <resultMap id="BaseResultMap" type="com.dfans.model.AccountChange" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="REAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, amount, create_date, user_id, admin_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_change
    where id = #{id,jdbcType=INTEGER}
  </select>
   
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_change
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dfans.model.AccountChange" >
    insert into account_change (id, type, amount, 
      create_date, user_id, admin_id
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{amount,jdbcType=REAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dfans.model.AccountChange" >
    insert into account_change
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=REAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dfans.model.AccountChange" >
    update account_change
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dfans.model.AccountChange" >
    update account_change
    set type = #{type,jdbcType=INTEGER},
      amount = #{amount,jdbcType=REAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>